<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luka.r18.mappers.AnimeTagMapMapper">

    <resultMap type="com.luka.r18.entity.AnimeTagMapEntity" id="AnimeTagMapMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="uuid" column="uuid" jdbcType="VARCHAR"/>
        <result property="animeViewUuid" column="anime_view_uuid" jdbcType="VARCHAR"/>
        <result property="tagUuid" column="tag_uuid" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap type="com.luka.r18.entity.response_object.AnimeTag" id="AnimeTagMap">
        <result property="animeViewUuid" column="anime_view_uuid" jdbcType="VARCHAR"/>
        <result property="tagName" column="tag_name" jdbcType="INTEGER"/>
        <result property="tagUuid" column="tag_uuid" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="queryAnimeTag" resultMap="AnimeTagMap">
        select
        anime_tag_map.anime_view_uuid,
        anime_tag.tag_name,
        anime_tag.uuid as tag_uuid
        from anime_tag_map left join anime_tag on anime_tag_map.tag_uuid = anime_tag.uuid
        where anime_tag_map.anime_view_uuid = #{animeViewUuid};
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="AnimeTagMapMap">
        select
          id, uuid, anime_view_uuid, tag_uuid, create_time
        from anime_tag_map
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AnimeTagMapMap">
        select
          id, uuid, anime_view_uuid, tag_uuid, create_time
        from anime_tag_map
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="uuid != null and uuid != ''">
                and uuid = #{uuid}
            </if>
            <if test="animeViewUuid != null and animeViewUuid != ''">
                and anime_view_uuid = #{animeViewUuid}
            </if>
            <if test="tagUuid != null and tagUuid != ''">
                and tag_uuid = #{tagUuid}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from anime_tag_map
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="uuid != null and uuid != ''">
                and uuid = #{uuid}
            </if>
            <if test="animeViewUuid != null and animeViewUuid != ''">
                and anime_view_uuid = #{animeViewUuid}
            </if>
            <if test="tagUuid != null and tagUuid != ''">
                and tag_uuid = #{tagUuid}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into anime_tag_map(uuid, anime_view_uuid, tag_uuid, create_time)
        values (#{uuid}, #{animeViewUuid}, #{tagUuid}, #{createTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into anime_tag_map(uuid, anime_view_uuid, tag_uuid, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.uuid}, #{entity.animeViewUuid}, #{entity.tagUuid}, #{entity.createTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into anime_tag_map(uuid, anime_view_uuid, tag_uuid, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.uuid}, #{entity.animeViewUuid}, #{entity.tagUuid}, #{entity.createTime})
        </foreach>
        on duplicate key update
        uuid = values(uuid),
        anime_view_uuid = values(anime_view_uuid),
        tag_uuid = values(tag_uuid),
        create_time = values(create_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update anime_tag_map
        <set>
            <if test="uuid != null and uuid != ''">
                uuid = #{uuid},
            </if>
            <if test="animeViewUuid != null and animeViewUuid != ''">
                anime_view_uuid = #{animeViewUuid},
            </if>
            <if test="tagUuid != null and tagUuid != ''">
                tag_uuid = #{tagUuid},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from anime_tag_map where id = #{id}
    </delete>

</mapper>

